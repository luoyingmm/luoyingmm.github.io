<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>落樱酱的个人博客~</title>
  
  <subtitle>落樱的个人博客</subtitle>
  <link href="http://www.luoyingmm.com/atom.xml" rel="self"/>
  
  <link href="http://www.luoyingmm.com/"/>
  <updated>2021-08-19T08:54:29.000Z</updated>
  <id>http://www.luoyingmm.com/</id>
  
  <author>
    <name>落樱酱</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>『Kotlin教程(1)』 变量、逻辑控制语句、类与可空变量</title>
    <link href="http://www.luoyingmm.com/2021/08/19/Kotlin%E5%AD%A6%E4%B9%A0-1/"/>
    <id>http://www.luoyingmm.com/2021/08/19/Kotlin%E5%AD%A6%E4%B9%A0-1/</id>
    <published>2021-08-19T01:19:31.000Z</published>
    <updated>2021-08-19T08:54:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大家好我来更新博客啦，最近自己正在学习用Kotlin来编写Android，决定写篇博客来巩固自身Kotlin语法。本博客尽可能采用Kotlin与Java互相对照方式来呈现，因此需要读者有一定的Java基础。</p></blockquote><p>有关Kotlin的发展历史和环境搭建之类的请自行搜寻，毕竟大家也有一定的编程基础，就不再介绍了。</p><p>Kotlin 的基本数值类型包括<code>Int</code>、<code>Long</code>、<code>Short</code>、<code>Float</code>、<code>Double</code>、<code>Boolean</code>、<code>Char</code>、<code>Byte</code> 等基本数据类型，用法上与Java没有区别，但请仔细观察他们的大小写，避免不必要的错误。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>Kotlin的变量分为可变变量（var）和不可变变量(val)</p><a id="more"></a><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">//对应的Kotlin代码如下var &lt;标识符&gt; : &lt;类型&gt; = &lt;初始化值&gt; //可变变量var a : Int = 1 //为可变变量整型a赋值为1val &lt;标识符&gt; : &lt;类型&gt; = &lt;初始化值&gt; //不可变变量val b: Int = 1 //为不可变变量整型a赋值为1print("a的大小为-&gt;$a") //输出a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">//对应的Java代码如下int a = 1;final int b = 1；    System.out.println("a的大小为-&gt;" + a);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>在我们编写代码中一般优先考虑<strong>val（不可变变量）</strong></p></li><li><p>从上述代码可以很明显的发现Kotlin是<strong>先写标识符后写类型的</strong>，这点可能会不太习惯，需要多加练习</p></li><li><p>$ 符号表示引用的意思。这里理解为<strong>字符串模板</strong>，可快捷的对变量进行操作</p></li><li><p>每一行代码的结束可以省略掉分号 <strong>;</strong> 第一次写可能会有一点不习惯。</p></li><li><p>编译器支持自动类型判断,即声明时可以<strong>不指定类型,由编译器判断</strong>，因此上述代码可改为如下，我们应该尽可能的采用这种方式赋值</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">var a = 1 //为可变变量整形a赋值为1val a = 1 //为不可变变量整形a赋值为1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2></li></ul><p>Kotlin废除了Java中的for(初始值;条件;增减步长)这个规则。但是Kotlin中对于for循环语句新增了其他的规则，来满足我们的需求</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">for(i in 0 until 3){    print("$i ") // 输出0 1 2 即为[n,m) 大于等于n,小于m}for (i in 3 downTo 0){    print("$i ") // 输出3 2 1 0 即为[n,m] 小于等于n,大于等于m ,n &gt; m}for (i in 0..3){    print("$i ") //输出0 1 2 3  即为[n,m] 大于等于n，小于等于m}for (i in 0..3 step 2){    print("$i ") //输出0 2   即设置步长为2}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">//对应的Java代码for (int i = 0; i &lt; 3; i++) {    System.out.print(i + " ");}for (int i = 3; i &gt;= 0 ; i--) {    System.out.print(i + " ");}for (int i = 0; i &lt;= 3; i++) {    System.out.print(i + " ");}for (int i = 0; i &lt;= 3; i=i+2) {    System.out.print(i + " ");}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>这里不再过多叙述，请仔细揣摩</strong></p><h2 id="When语句"><a href="#When语句" class="headerlink" title="When语句"></a>When语句</h2><p>在Kotlin中废除了Java的switch语句，改为When语句，When语句非常强大，还可以替代<strong>if else()语句</strong></p><pre class="line-numbers language-none"><code class="language-none">when(3){    1 -&gt; print("1")    2 -&gt; print("2")    else -&gt;{        print("3")    }}//最终输出3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">//对应java代码switch (3){    case 1:        System.out.print("1");        break;    case 2:        System.out.print("2");        break;    default:        System.out.print("3");}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>这里只做简单介绍，请自己多加摸索</strong></p><h2 id="类的使用以及声明可空变量"><a href="#类的使用以及声明可空变量" class="headerlink" title="类的使用以及声明可空变量"></a>类的使用以及声明可空变量</h2><p>Kotlin和Java一样也有类和方法，但在Kotlin中我们一般把方法称之为<strong>函数</strong>，类和函数的定义如下</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">class a {  // 类名为 a    private val age = 15    private lateinit var name: String //声明一个变量并延迟初始化    private var hobby: String? = null //要给变量赋值为null或0时，需要在类型后加？    // private val num2  会报错，Kotlin在类中的基本数值类型必须初始化且无法使用lateinit延迟初始化    fun say() {        // num = 17 报错，因为声明的是 val 所以不能修改        name = "张三"        print("我叫$name，今年${age}岁了")    } // 成员函数}fun main() {    val b:a = a() //实例化    b.say() //调用函数sum 输出:我叫张三，今年 15 岁了}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">//对应的Java代码class a{    private final int age = 15;    private String name;    private String hobby = null;    void say(){        name = "张三";        System.out.println("我叫" + name + ",今年" + age + "岁了");    }    public static void main(String[] args) {       final a b = new b();        b.say();    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>由于 Kotlin 的空安全机制，可以有效防止程序出现空指针异常，因此需要进行额外的处理</li><li>创建成员对象必须初始化，如果不初始化，需使用<strong>lateinit</strong>关键字</li><li>基本数值类型无法使用<strong>lateinit</strong>关键字，必须赋值</li><li>要给变量赋值为null或0时，需要在类型后加?</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大家好我来更新博客啦，最近自己正在学习用Kotlin来编写Android，决定写篇博客来巩固自身Kotlin语法。本博客尽可能采用Kotlin与Java互相对照方式来呈现，因此需要读者有一定的Java基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有关Kotlin的发展历史和环境搭建之类的请自行搜寻，毕竟大家也有一定的编程基础，就不再介绍了。&lt;/p&gt;
&lt;p&gt;Kotlin 的基本数值类型包括&lt;code&gt;Int&lt;/code&gt;、&lt;code&gt;Long&lt;/code&gt;、&lt;code&gt;Short&lt;/code&gt;、&lt;code&gt;Float&lt;/code&gt;、&lt;code&gt;Double&lt;/code&gt;、&lt;code&gt;Boolean&lt;/code&gt;、&lt;code&gt;Char&lt;/code&gt;、&lt;code&gt;Byte&lt;/code&gt; 等基本数据类型，用法上与Java没有区别，但请仔细观察他们的大小写，避免不必要的错误。&lt;/p&gt;
&lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;p&gt;Kotlin的变量分为可变变量（var）和不可变变量(val)&lt;/p&gt;</summary>
    
    
    
    
    <category term="学习笔记" scheme="http://www.luoyingmm.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="http://www.luoyingmm.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Kotlin" scheme="http://www.luoyingmm.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Android线程</title>
    <link href="http://www.luoyingmm.com/2021/04/18/Android%20%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E5%AD%A6%E4%B9%A0_%E5%8D%9A%E5%AE%A2%E7%89%88/"/>
    <id>http://www.luoyingmm.com/2021/04/18/Android%20%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E5%AD%A6%E4%B9%A0_%E5%8D%9A%E5%AE%A2%E7%89%88/</id>
    <published>2021-04-18T08:07:40.000Z</published>
    <updated>2021-04-18T09:11:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android线程"><a href="#Android线程" class="headerlink" title="Android线程"></a>Android线程</h1><p>最近学习了Android多线程和异步任务，因此整理出以下笔记</p><h2 id="子线程中进行UI操作"><a href="#子线程中进行UI操作" class="headerlink" title="子线程中进行UI操作"></a>子线程中进行UI操作</h2><blockquote><p>在Android中子线程是不能直接对UI控件直接操作的，否则会报<code>android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views</code>的错误</p><p>因此我们需要先把子线程切换到主线程后再对其进行操作</p></blockquote><h3 id="使用Handler"><a href="#使用Handler" class="headerlink" title="使用Handler"></a>使用Handler</h3><p>在Android中要进行多个线程的通讯<code>Handler</code>是用的比较频繁的，它负责发送和处理消息，可以通过它来实现其他线程和主线程之间通信。</p><img src="https://cdn2.sublimerui.top/2021/04/18/image-20210418143349790.png" alt="" style="zoom:50%;"><blockquote><p>以下案例实现点击Button后改变Button的文字</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java">//监听Buttonpublic void btnOnClick(View view) {    new Thread(new Runnable() {        @Override        public void run() {            try {                Thread.sleep(2000);            } catch (InterruptedException e) {                e.printStackTrace();            }            handler.sendEmptyMessage(1);        }    }).start();}private Handler handler = new Handler(){        @Override        public void handleMessage(@NonNull Message msg) {            if (msg.what == 1){                btn_1.setText("123");            }        }    };<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用Post"><a href="#使用Post" class="headerlink" title="使用Post"></a>使用Post</h3><p>我们还可以使用View的post()方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">private void thread() {    new Thread(new Runnable() {        @Override        public void run() {           btn_1.post(new Runnable() {               @Override               public void run() {                   btn_1.setText("123");               }           });        }    }).start();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用runOnUiThread"><a href="#使用runOnUiThread" class="headerlink" title="使用runOnUiThread"></a>使用runOnUiThread</h3><p>也可以使用Activity的runOnUiThread()方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">private void thread() {    new Thread(new Runnable() {        @Override        public void run() {            runOnUiThread(new Runnable() {                @Override                public void run() {                    btn_1.setText("123");                }            });        }    }).start();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="AsynTask异步任务"><a href="#AsynTask异步任务" class="headerlink" title="AsynTask异步任务"></a>AsynTask异步任务</h2><blockquote><p>AsynTask是多线程编程的一个框架，它介于Thread和handler之间，可以更加高效的在主线程和子线程之间进行切换。</p></blockquote><h3 id="AsynTask的基本使用"><a href="#AsynTask的基本使用" class="headerlink" title="AsynTask的基本使用"></a>AsynTask的基本使用</h3><p>AsynTask是一个抽象类，我们需要自定义一个类来实现它的doInBackground方法然后调用TestTask().execute()方法即可。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">class TestTask extends AsyncTask&lt;Void,Void,String&gt;{    @Override    protected String doInBackground(Void... voids) {        try {            Thread.sleep(1000);        } catch (InterruptedException e) {            e.printStackTrace();        }        String str = "ABC";        return str;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AsynTask的四大方法"><a href="#AsynTask的四大方法" class="headerlink" title="AsynTask的四大方法"></a>AsynTask的四大方法</h3><h4 id="onPreExecute"><a href="#onPreExecute" class="headerlink" title="onPreExecute()"></a>onPreExecute()</h4><p>此方法在后台任务开始前调用，用于初始化界面上的一些操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Overrideprotected void onPreExecute() {    super.onPreExecute();    Log.d("TAG","onPreExecute");}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="doInBackground"><a href="#doInBackground" class="headerlink" title="doInBackground()"></a>doInBackground()</h4><p>这个方法是子线程，用作处理耗时任务，也是我们代码主要书写的地方，如果中途需要更新UI则调用publishProgress()后重写onProgressUpdate()方法。</p><p>最后的return返回的结果会传递给onPostExecute()，用作更新UI操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Overrideprotected String doInBackground(Void... voids) {    try {        Thread.sleep(1000);    } catch (InterruptedException e) {        e.printStackTrace();    }    String str = "ABC";    return str;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="onProgressUpdate"><a href="#onProgressUpdate" class="headerlink" title="onProgressUpdate()"></a>onProgressUpdate()</h4><p>这个方法用于接收publishProgress()传入的参数，从而更新控件。 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Overrideprotected void onProgressUpdate(Void... values) {    super.onProgressUpdate(values);    Log.d("TAG","onProgressUpdate");}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="onPostExecute"><a href="#onPostExecute" class="headerlink" title="onPostExecute()"></a>onPostExecute()</h4><p>这个方法可以接收doInBackground()所返回的内容，进行UI控件的操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Overrideprotected void onPostExecute(String s) {    super.onPostExecute(s);    btn_1.setText(s);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="案例模拟进度条"><a href="#案例模拟进度条" class="headerlink" title="案例模拟进度条"></a>案例模拟进度条</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Overrideprotected void onPreExecute() {    super.onPreExecute();    Toast.makeText(ExecutorServiceTest.this, "开始下载", Toast.LENGTH_SHORT).show();}@Overrideprotected Boolean doInBackground(Void... voids) {    try {        while (true){            Thread.sleep(500);            pb += 10;            publishProgress(pb);            if (pb &gt;= 100){                break;            }        }    } catch (InterruptedException e) {       return false;    }    return true;}@Overrideprotected void onProgressUpdate(Integer... values) {    super.onProgressUpdate(values);    pb_1.setProgress(values[0]);}@Overrideprotected void onPostExecute(Boolean aBoolean) {    super.onPostExecute(aBoolean);    if (aBoolean){        Toast.makeText(ExecutorServiceTest.this, "下载成功", Toast.LENGTH_SHORT).show();        pb_1.setVisibility(View.GONE);    }else {        Toast.makeText(ExecutorServiceTest.this, "下载失败", Toast.LENGTH_SHORT).show();        pb_1.setVisibility(View.GONE);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android线程&quot;&gt;&lt;a href=&quot;#Android线程&quot; class=&quot;headerlink&quot; title=&quot;Android线程&quot;&gt;&lt;/a&gt;Android线程&lt;/h1&gt;&lt;p&gt;最近学习了Android多线程和异步任务，因此整理出以下笔记&lt;/p&gt;
&lt;h2 id=</summary>
      
    
    
    
    
    <category term="安卓" scheme="http://www.luoyingmm.com/tags/%E5%AE%89%E5%8D%93/"/>
    
    <category term="前端" scheme="http://www.luoyingmm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="学习笔记" scheme="http://www.luoyingmm.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>安卓学习笔记(2)</title>
    <link href="http://www.luoyingmm.com/2021/03/06/Android2/"/>
    <id>http://www.luoyingmm.com/2021/03/06/Android2/</id>
    <published>2021-03-06T07:23:53.000Z</published>
    <updated>2021-03-06T12:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>在学习安卓中，最先接触的便是它的七大布局和一些控件了，本篇就来整理两个最常用的<font color="#CE641E">线性布局(LinearLayout)和相对布局（RelativeLayout）</font>的笔记。</p><blockquote><p>因为自己也是这几个礼拜刚接触安卓，以下笔记难免有些错误或者说法不够专业，也请大家多多包涵 =v=</p></blockquote><h2 id="线性布局（LinearLayout）"><a href="#线性布局（LinearLayout）" class="headerlink" title="线性布局（LinearLayout）"></a>线性布局（LinearLayout）</h2><ol><li>线性布局一定要通过 <font color="#CE641E">orientation</font> 的属性来控制控件以水平(horizontal)或竖直(vertical)的方式进行排列(默认使用vertical)，并且只能依次排列，如果有控件超出容器后就不会被显示。</li></ol><ol start="2"><li><p>我们可以通过<font color="#CE641E">layout_width和layout_height</font>中的<font color="#CE641E">wrap_content或match_parent</font>属性来控制这个布局的大小,前者的布局大小会根据内容大小而改变，而后者是直接占满它剩下内容的大小。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>用<font color="#CE641E">layout_gravity和gravity</font>来控制位置，其中gravity是控制内容组件，layout_gravity是面向父级控制自己位置，另外layout_gravity和gravity可以用”|”来并用，比如以下代码可以让控件居中左对齐。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span><span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center|left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span>    <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><font color="#CE641E">padding和layout_margin</font>，分别用于指定内边距和外边距，单位是”dp”，一般用于细微调整距离，不建议大量使用，不然将难以适配不同分辨率的手机.</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center|left<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30dp<span class="token punctuation">"</span></span>    <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30dp<span class="token punctuation">"</span></span>        <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><font color="#CE641E">layout_weight：</font>权重（比例分配）,也就是等比例划分，这是线性布局独有的，也是很重要的一个属性，它可以按比例分配布局或空间所占得大小，要使用这个属性先要把android:layout_width=”0dp”，再设置layout_weight=多少，下面代码就是两个按钮按1:2分配空间。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span>        <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>B<span class="token punctuation">"</span></span>        <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><h2 id="相对布局（RelativeLayout）"><a href="#相对布局（RelativeLayout）" class="headerlink" title="相对布局（RelativeLayout）"></a>相对布局（RelativeLayout）</h2><p>相对布局相比线性布局就要难一些，相对布局容器内子组件的位置总是相对兄弟组件、父容器来决定的。</p><ol><li><p>相对布局同时也拥有线性布局的<font color="#CE641E">layout_gravity和gravity、padding和layout_margin </font>用法也与前面的线性布局相同，但是它没有orientation属性，因此只能通过相对于某个布局和空间来布局。</p></li><li><p><font color="#CE641E">layout_alignParent和layout_align</font>这两个属性是相对布局独有的，分别代表与父容器定位和根据兄弟组件定位，可以指定布局或控件的位置。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/tv_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150dp<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>32sp<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#ffffcc00<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alignTop<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#ffa6a5aa<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_alignTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/tv_center<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><font color="#CE641E">layout_centerXXX</font>可以在父视图内居中显示，它的属性有</p></li></ol><ul><li>layout_centerInParent 相对于父视图完全居中</li><li>layout_centerHorizontal 相对于父视图水平居中</li><li>layout_centerVertical 相对于父视图垂直居中<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>InParen<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>           <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerHorizontal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>           <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerVertical</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn2.sublimerui.top/2021/03/06/snipaste_2021-03-06_18-53-14.png"></li></ul><ol start="5"><li><font color="#CE641E">layout_XXX </font>可以指定它与其他空间的相对位置，这个是绝对布局的核心，但一定要给控件给定id属性。</li></ol><ul><li>layout_toLeftOf:控件的左边</li><li>layout_toRightOf：控件的右边</li><li>layout_below：控件的下面</li><li>layout_above：控件的上面<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/btn_above<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/btn_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>           <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/btn_below<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerHorizontal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>below<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/btn_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>           <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/btn_left<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_toLeftOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/btn_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/btn_right<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_toRightOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/btn_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>           <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/btn_center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>           <span class="token attr-name"><span class="token namespace">android:</span>textAllCaps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn2.sublimerui.top/2021/03/06/snipaste_2021-03-06_19-03-12.png"></li></ul><blockquote><p>以上就是线性布局（LinearLayout）和相对布局（RelativeLayout）基本属性的笔记了</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在学习安卓中，最先接触的便是它的七大布局和一些控件了，本篇就来整理两个最常用的&lt;font color=&quot;#CE641E&quot;&gt;线性布局(LinearLayout)和相对布局（RelativeLayout）&lt;/font&gt;的笔记。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为自己也</summary>
      
    
    
    
    
    <category term="安卓" scheme="http://www.luoyingmm.com/tags/%E5%AE%89%E5%8D%93/"/>
    
    <category term="前端" scheme="http://www.luoyingmm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="学习笔记" scheme="http://www.luoyingmm.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>安卓学习笔记(1)</title>
    <link href="http://www.luoyingmm.com/2021/03/06/Android1/"/>
    <id>http://www.luoyingmm.com/2021/03/06/Android1/</id>
    <published>2021-03-06T02:07:40.000Z</published>
    <updated>2021-03-06T11:25:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近这段时间我学习了Android，感觉有点难度，因此我整理了些学习过程中踩过的坑和知识点笔记出来。</p><blockquote><p>本篇为Android的前提准备，知识点笔记在安卓学习笔记(2)中罗列</p></blockquote><h2 id="安装Android-studio"><a href="#安装Android-studio" class="headerlink" title="安装Android studio"></a>安装Android studio</h2><p>随着时代的发展，开发安卓的IDE早已经从eclipse变更为Android studio了，大家可以进入<a href="https://developer.android.google.cn/studio/">官网</a>进行下载安装.<br>安装完毕后可能会出现下载SDK失败或者构建gradle卡住的情况(我自己就踩过坑)，这是因为google的服务器在海外导致的，并且Android studio是无法直接走代理软件的，它需要我们自己配置Proxy才行，观察自己的代理软件代理的端口是什么，然后填入即可。<br><img src="https://cdn2.sublimerui.top/2021/03/06/android1.png"></p><h2 id="配置Android模拟器"><a href="#配置Android模拟器" class="headerlink" title="配置Android模拟器"></a>配置Android模拟器</h2><h3 id="内置Android-AVD虚拟机"><a href="#内置Android-AVD虚拟机" class="headerlink" title="内置Android AVD虚拟机"></a>内置Android AVD虚拟机</h3><p>这个过程中可能会出现<br><img src="https://cdn2.sublimerui.top/2021/03/06/75af02324b18512cb1ef4813ad334884cce349b6.jpg"><br>这个问题是你没有开启vt造成的，百度搜索你主板进入BIOS方法，然后开启即可。</p><h3 id="第三方模拟器"><a href="#第三方模拟器" class="headerlink" title="第三方模拟器"></a>第三方模拟器</h3><p>如果你打开了第三方模拟器后Android studio依旧无法识别的话可能是你的模拟器<font color="#CE641E">没有打开usb调试</font>，进入第三方模拟器设置界面打开即可。<br>执行上述方案还是不行的话或者连接不稳定，你可以试试在Android studio的控制台中执行以下命令(前提是你要把adb目录放到环境变量中)</p><pre class="line-numbers language-none"><code class="language-none">adb connect 127.0.0.1:(模拟器的端口号)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>例如逍遥安卓模拟器 adb connect 127.0.0.1:21503  </p></blockquote><p>海马玩模拟器的端口号是：26944。</p><p>逍遥安卓模拟器的端口号是：21503。</p><p>夜神玩模拟器的端口号是：62001。</p><p>网易MuMu模拟器端口号是：7555 </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/weixin_41915425/article/details/79729484">android studio 连接外部模拟器方法 以及常用模拟器端口</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近这段时间我学习了Android，感觉有点难度，因此我整理了些学习过程中踩过的坑和知识点笔记出来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇为Android的前提准备，知识点笔记在安卓学习笔记(2)中罗列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装And</summary>
      
    
    
    
    
    <category term="安卓" scheme="http://www.luoyingmm.com/tags/%E5%AE%89%E5%8D%93/"/>
    
    <category term="前端" scheme="http://www.luoyingmm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="学习笔记" scheme="http://www.luoyingmm.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>落樱的自我介绍</title>
    <link href="http://www.luoyingmm.com/2021/02/14/one/"/>
    <id>http://www.luoyingmm.com/2021/02/14/one/</id>
    <published>2021-02-14T13:30:40.000Z</published>
    <updated>2021-03-06T11:26:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p><font face="微软雅黑" size="4">我是一名高二的学生，性别为男，网名落樱，轻度二次元，INTJ。大约是从2020年的10月份开始正式接触计算机的，同时也学习了第一门编程语言——<strong>C语言</strong>。可能就在那时发现我对计算机有一种情有独钟的热爱，只要一有空便会去会折腾些奇离古怪的东西，至今为止这样的生活已经过去4个多月了，也让我接触到了C语言，Java，mysql数据库，web等方面的基础知识。</font>  </p><p><font face="微软雅黑" size="4">其实早在三个月前我就搭建一个博客，用的是wordpress，但是当时时间和能力有限，连主题都没设置（就是个空壳网站）就弃坑了。时间过的很快，现在已经是2021年的寒假，我回想起数个月前的大坑，便利用了寒假里的空余时间学习了些HTML和CSS的前端知识，最终在今日（2021/02/14）用hexo搭建完成了我的第一个博客。</font>  </p><p><font face="微软雅黑" size="4"><del>好了，闲话不多说了，下面来说说我的性格吧。</del></font></p><p><font face="微软雅黑" size="4">我从小就很自闭，记得小时候我很少与同学交流，有着社交恐惧症，因此每次老师叫我回答问题或者上台发言都是我的最大噩梦（不过现在没那么夸张啦）。</font></p><p><font face="微软雅黑" size="4">如果要说我最讨厌的课程莫非是语文了，也不到是什么原因，我对语文的背诵和默写永远比别人慢很多，别人10分钟背完的课文我可能半小时都背不完，我甚至觉得一字不差的背诵文言文几乎是一件不可能完成的事情，因此我的语文成绩和作文水准一直都很菜。</font></p><p><font face="微软雅黑" size="4">好啦，关于自我介绍就暂时说到这吧，最后祝大家新年快乐！！！</font></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于我&quot;&gt;&lt;a href=&quot;#关于我&quot; class=&quot;headerlink&quot; title=&quot;关于我&quot;&gt;&lt;/a&gt;关于我&lt;/h1&gt;&lt;p&gt;&lt;font face=&quot;微软雅黑&quot; size=&quot;4&quot;&gt;我是一名高二的学生，性别为男，网名落樱，轻度二次元，INTJ。大约是从2020</summary>
      
    
    
    
    
    <category term="日常" scheme="http://www.luoyingmm.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.luoyingmm.com/2021/02/14/hello-world/"/>
    <id>http://www.luoyingmm.com/2021/02/14/hello-world/</id>
    <published>2021-02-14T13:30:40.000Z</published>
    <updated>2021-02-16T14:28:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="开端" scheme="http://www.luoyingmm.com/tags/%E5%BC%80%E7%AB%AF/"/>
    
  </entry>
  
</feed>
